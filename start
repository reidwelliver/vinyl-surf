#!/bin/bash
UTILDIR="$(pwd $(dirname "$0"))/utils"
source $UTILDIR/link "$@"


#currently need sudo for docker commands
checksudo

#absolute path to bind to docker
if hasopt --gitpath yes
then
	GITPATH=$(fetchopt --gitpath yes)
else
	GITPATH=$(pwd $(dirname "$0"))
fi


if hasopt --utildir yes
then
	UTILDIR=$(fetchopt --utildir yes)
fi

if hasopt --build-debug yes
then
	BUILD_DEBUG="--build-arg BUILD_DEBUG=$(fetchopt --build-debug yes)"
else
	BUILD_DEBUG=""
fi

#TODO: if project subdir has a dockerfile, override call to this one


#Server Directory
requireopt -p yes
SERVDIR=$(fetchopt -p yes)


if [ ! -d $SERVDIR ]
then
	error "Your selected server is not a directory in the git project!"
	exit 1
fi


PORTCMD=$($UTILDIR/port-generator -f $SERVDIR/config/ports)
#todo: portcmd validation


#start:
# There's a running container to attach to
if ! isempty "$(docker ps | grep vs-$SERVDIR-build)"
then
	docker attach vs-$SERVDIR-build

# There's a stopped container to start and attach to
elif ! isempty "$(docker ps -a | grep vs-$SERVDIR-build)"
then
	docker start -ai vs-$SERVDIR-build

# There's an image to build a container from
elif ! isempty "$(docker ps -a | grep vs-$SERVDIR-build)"
then
	docker run --name vs-$SERVDIR-build $PORTCMD -v $GITPATH/$SERVDIR:/project -v $GITPATH/utils:/utils -i -t reidwelliver/vs-base:$SERVDIR-build /utils/run-wakeup
else
	# we need to build an image
	# prompt to run setup
	info "No suitable image or container found, run setup to build? [Y/N]: (N)"
	read DOSETUP
	if contains "$DOSETUP" "Y" || contains "$DOSETUP" "y"
	then
		info "Ok, running setup"
		./setup --gitpath "$GITPATH" --utildir "$UTILDIR" "$BUILD_DEBUG" -p "$SERVDIR"
	else
		info "Not running setup, exiting."
		exit 0
	fi
fi